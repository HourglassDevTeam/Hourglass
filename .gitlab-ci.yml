variables:
  PCF_DEPLOY_REPO: http://arthur:$PERSONAL_ACCESS_TOKEN@192.168.110.130/arthur/unilink_execution.git
  PCF_DEPLOY_BRANCH: master
  PCF_COMMIT_USER_NAME: arthur
  PCF_COMMIT_USER_EMAIL: arthur@ciuyat.com

stages:
  - mergeCode

mergeCode:
  stage: mergeCode
  script:
    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > /tmp/id_rsa
    - chmod 600 /tmp/id_rsa
    - ssh-add /tmp/id_rsa

    ##
    ## Optionally disable host key checking. Be aware that by adding that
    ## you are susceptible to man-in-the-middle attacks.
    ## WARNING: Use this only with the Docker executor, if you use it with shell
    ## you will overwrite your user's SSH config.
    ##
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    
    - git config --global user.email "$PCF_COMMIT_USER_EMAIL"
    - git config --global user.name "$PCF_COMMIT_USER_NAME"
    - git remote remove origin || true
    - git remote remove gitlab || true
    - git remote add origin "$PCF_DEPLOY_REPO"
    - git remote set-url origin http://arthur:$PERSONAL_ACCESS_TOKEN@192.168.110.130/arthur/unilink_execution.git
    - git remote set-url gitee https://arthur19q3:the17thangel@gitee.com/unilink_1/UnilinkExecution.git
    - git remote add gitlab "$CI_PROJECT_URL"
    - git checkout -B $PCF_DEPLOY_BRANCH
    - git pull origin $PCF_DEPLOY_BRANCH
    - git pull gitlab $CI_COMMIT_REF_NAME
    - git push origin $PCF_DEPLOY_BRANCH
  tags:
    - sync_task # Gitlab Runner注册时，设置的tag
